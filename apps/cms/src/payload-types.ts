/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    sources: Source;
    runs: Run;
    blocks: Block;
    savee_users: SaveeUser;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    sources: SourcesSelect<false> | SourcesSelect<true>;
    runs: RunsSelect<false> | RunsSelect<true>;
    blocks: BlocksSelect<false> | BlocksSelect<true>;
    savee_users: SaveeUsersSelect<false> | SaveeUsersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * CMS admin users for managing the scraping system
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  roles?: ('admin' | 'user')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * Source URLs for scraping content from Savee.it
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sources".
 */
export interface Source {
  id: number;
  /**
   * Full URL to scrape content from
   */
  url: string;
  sourceType: 'home' | 'pop' | 'user';
  /**
   * Username for user profile sources
   */
  username?: string | null;
  status: 'active' | 'paused' | 'completed' | 'error';
  /**
   * If set, overrides global MONITOR_MIN_INTERVAL_SECONDS for this job
   */
  intervalSeconds?: number | null;
  /**
   * If enabled, runs strictly on the interval without backoff
   */
  disableBackoff?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Individual scraping job executions
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "runs".
 */
export interface Run {
  id: number;
  source: number | Source;
  kind: 'manual' | 'scheduled';
  /**
   * 0 means unlimited; otherwise limit per run
   */
  maxItems?: number | null;
  status: 'pending' | 'running' | 'paused' | 'completed' | 'error';
  /**
   * Real-time job metrics
   */
  counters?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  startedAt?: string | null;
  completedAt?: string | null;
  errorMessage?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Individual scraped content blocks from Savee.it
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blocks".
 */
export interface Block {
  id: number;
  /**
   * Persisted origin for filters (home | pop | username)
   */
  origin_text?: string | null;
  /**
   * Unique identifier from Savee.it
   */
  external_id: string;
  /**
   * Comma-separated usernames who saved this block
   */
  saved_by_usernames?: string | null;
  source: number | Source;
  run: number | Run;
  /**
   * SaveeUser profile for user content organization
   */
  savee_user?: (number | null) | SaveeUser;
  url: string;
  title?: string | null;
  description?: string | null;
  media_type?: ('image' | 'video' | 'gif' | 'unknown') | null;
  image_url?: string | null;
  video_url?: string | null;
  thumbnail_url?: string | null;
  status: 'pending' | 'fetched' | 'scraped' | 'uploaded' | 'error';
  /**
   * OpenGraph title from meta tags
   */
  og_title?: string | null;
  /**
   * OpenGraph description from meta tags
   */
  og_description?: string | null;
  /**
   * OpenGraph image URL from meta tags
   */
  og_image_url?: string | null;
  /**
   * OpenGraph canonical URL
   */
  og_url?: string | null;
  /**
   * Savee API endpoint for source resolution
   */
  source_api_url?: string | null;
  /**
   * ISO timestamp when item was scraped
   */
  saved_at?: string | null;
  /**
   * Array of hex color codes extracted from image
   */
  color_hexes?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * AI-generated descriptive tags for content
   */
  ai_tags?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Array of RGB color values
   */
  colors?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Links extracted from item sidebar
   */
  links?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Complete sidebar info and other metadata
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  r2_key?: string | null;
  errorMessage?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Savee.com user profiles discovered during scraping
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "savee_users".
 */
export interface SaveeUser {
  id: number;
  /**
   * Savee.com username (unique identifier)
   */
  username: string;
  /**
   * Display name shown on profile
   */
  display_name?: string | null;
  /**
   * User bio/description
   */
  bio?: string | null;
  /**
   * URL to profile avatar image
   */
  profile_image_url?: string | null;
  /**
   * R2 key for stored avatar (when available)
   */
  avatar_r2_key?: string | null;
  /**
   * URL to profile cover/banner image
   */
  cover_image_url?: string | null;
  /**
   * Full URL to Savee profile page
   */
  profile_url: string;
  /**
   * Number of followers
   */
  follower_count?: number | null;
  /**
   * Number of people this user follows
   */
  following_count?: number | null;
  /**
   * Total number of saves/items
   */
  saves_count?: number | null;
  /**
   * Number of collections created
   */
  collections_count?: number | null;
  /**
   * User location (if provided)
   */
  location?: string | null;
  /**
   * Personal website URL
   */
  website_url?: string | null;
  /**
   * Social media links and profiles
   */
  social_links?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Whether the user has a verified account
   */
  is_verified?: boolean | null;
  /**
   * Whether the account is still active
   */
  is_active?: boolean | null;
  /**
   * When this profile was last updated/scraped
   */
  last_scraped_at?: string | null;
  /**
   * When this user was first discovered
   */
  first_discovered_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'sources';
        value: number | Source;
      } | null)
    | ({
        relationTo: 'runs';
        value: number | Run;
      } | null)
    | ({
        relationTo: 'blocks';
        value: number | Block;
      } | null)
    | ({
        relationTo: 'savee_users';
        value: number | SaveeUser;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sources_select".
 */
export interface SourcesSelect<T extends boolean = true> {
  url?: T;
  sourceType?: T;
  username?: T;
  status?: T;
  intervalSeconds?: T;
  disableBackoff?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "runs_select".
 */
export interface RunsSelect<T extends boolean = true> {
  source?: T;
  kind?: T;
  maxItems?: T;
  status?: T;
  counters?: T;
  startedAt?: T;
  completedAt?: T;
  errorMessage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blocks_select".
 */
export interface BlocksSelect<T extends boolean = true> {
  origin_text?: T;
  external_id?: T;
  saved_by_usernames?: T;
  source?: T;
  run?: T;
  savee_user?: T;
  url?: T;
  title?: T;
  description?: T;
  media_type?: T;
  image_url?: T;
  video_url?: T;
  thumbnail_url?: T;
  status?: T;
  og_title?: T;
  og_description?: T;
  og_image_url?: T;
  og_url?: T;
  source_api_url?: T;
  saved_at?: T;
  color_hexes?: T;
  ai_tags?: T;
  colors?: T;
  links?: T;
  metadata?: T;
  r2_key?: T;
  errorMessage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "savee_users_select".
 */
export interface SaveeUsersSelect<T extends boolean = true> {
  username?: T;
  display_name?: T;
  bio?: T;
  profile_image_url?: T;
  avatar_r2_key?: T;
  cover_image_url?: T;
  profile_url?: T;
  follower_count?: T;
  following_count?: T;
  saves_count?: T;
  collections_count?: T;
  location?: T;
  website_url?: T;
  social_links?: T;
  is_verified?: T;
  is_active?: T;
  last_scraped_at?: T;
  first_discovered_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
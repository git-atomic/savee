name: Scheduled Worker Run

on:
  # Manual-only worker. The scheduled, production scheduler is Engine Monitor (monitor.yml).
  workflow_dispatch:
    inputs:
      max_items:
        description: "Max items per source"
        required: false
        default: "50"
      start_url:
        description: "The URL to start scraping from"
        required: false
        default: "https://savee.it/"

jobs:
  run-worker-once:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: apps/worker/requirements.txt

      - name: Install Python dependencies
        working-directory: apps/worker
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers (with system deps)
        run: |
          python -m playwright install --with-deps chromium

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('apps/worker/requirements.txt') }}-v1
          restore-keys: ${{ runner.os }}-playwright-

      - name: Write Savee cookies to file
        run: |
          mkdir -p apps/worker
          if [ -n "${{ secrets.COOKIES_JSON }}" ]; then
            echo "Writing cookies from COOKIES_JSON"
            printf '%s' "${{ secrets.COOKIES_JSON }}" > apps/worker/savee_cookies.json;
          elif [ -n "${{ secrets.COOKIES_URL }}" ]; then
            echo "Downloading cookies from COOKIES_URL";
            curl -fsSL "${{ secrets.COOKIES_URL }}" -o apps/worker/savee_cookies.json;
          elif [ -n "${{ secrets.COOKIES_JSON_MINIFIED }}" ]; then
            echo "Writing cookies from COOKIES_JSON_MINIFIED";
            printf '%s' "${{ secrets.COOKIES_JSON_MINIFIED }}" > apps/worker/savee_cookies.json;
          else
            echo "No cookies provided. Set COOKIES_JSON or COOKIES_URL or COOKIES_JSON_MINIFIED secrets.";
            exit 1;
          fi
          echo "Validating/normalizing cookies JSON via Python";
          python - <<'PY'
          import json, sys, re, ast
          p = 'apps/worker/savee_cookies.json'
          raw = open(p, 'r', encoding='utf-8').read()

          def write_ok(d):
              open(p, 'w', encoding='utf-8').write(json.dumps(d))
              print('Cookies JSON OK')

          try:
              d = json.loads(raw)
              write_ok(d)
              sys.exit(0)
          except Exception:
              pass

          try:
              d = ast.literal_eval(raw)
              write_ok(d)
              sys.exit(0)
          except Exception:
              pass

          fixed = re.sub(r'([,{]\s*)([A-Za-z0-9_\-]+)\s*:', r'\1"\2":', raw)
          fixed = fixed.replace("'", '"')
          try:
              d = json.loads(fixed)
              write_ok(d)
          except Exception:
              print('Warning: Cookies JSON could not be normalized; using raw content')
          PY

      - name: Run one scrape cycle
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          R2_ENDPOINT_URL: ${{ secrets.R2_ENDPOINT_URL }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          R2_REGION: auto
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          COOKIES_PATH: apps/worker/savee_cookies.json
          CMS_URL: ${{ secrets.CMS_URL }}
        working-directory: apps/worker
        run: |
          MAX_ITEMS="${{ github.event.inputs.max_items }}";
          START_URL="${{ github.event.inputs.start_url }}"; [ -z "$START_URL" ] && START_URL="https://savee.it/";
          if [ -n "$MAX_ITEMS" ]; then
            python -m app.cli --start-url "$START_URL" --max-items "$MAX_ITEMS";
          else
            python -m app.cli --start-url "$START_URL" --max-items -1;
          fi
